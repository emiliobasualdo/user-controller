basePath: /
definitions:
  dtos.AccountDto:
    properties:
      dni:
        example: "21399433"
        type: string
      email:
        example: moni.argento@hotmail.com
        type: string
      id:
        type: ID
      instruments:
        items:
          $ref: '#/definitions/dtos.InstrumentDto'
        type: array
      lastName:
        example: Potrelli de Argento
        type: string
      name:
        example: Mónica
        type: string
      phoneNumber:
        type: PhoneNumber
      prepaids:
        items:
          $ref: '#/definitions/dtos.PrepaidDto'
        type: array
    required:
    - dni
    - email
    - id
    - lastName
    - name
    - phoneNumber
    type: object
  dtos.InstrumentDto:
    properties:
      creditType:
        enum:
        - DEBIT
        - ' CREDIT'
        - ' PREPAID'
        example: DEBIT
        type: string
      holder:
        example: José Pepe Argento
        type: string
      issuer:
        example: Banco Itaú
        type: string
      lastFourNumbers:
        example: "4930"
        type: string
      pps:
        enum:
        - VISA
        - ' AMEX'
        - ' MC'
        example: VISA
        type: string
      validThru:
        example: 11/24
        type: string
    required:
    - creditType
    - holder
    - issuer
    - lastFourNumbers
    - pps
    - validThru
    type: object
  dtos.LoginDto:
    properties:
      code:
        example: "123654"
        type: string
      phoneNumber:
        example: "005491133071114"
        type: string
    required:
    - code
    - phoneNumber
    type: object
  dtos.PrepaidDto:
    properties:
      QUILMES:
        example: "4200"
        type: string
      availableDollar:
        example: 12.34
        type: number
      availableDollarInAdvanced:
        example: 12.34
        type: number
      availableLocal:
        example: 230.45
        type: number
      availableLocalInAdvanced:
        example: 230.45
        type: number
      creditDollar:
        example: -23.54
        type: number
      creditLocal:
        example: -2850.63
        type: number
      id:
        type: string
    type: object
  dtos.TokenDto:
    properties:
      code:
        example: 200
        type: integer
      expire:
        example: "2020-07-08T15:58:45+02:00"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTQyMTY3MjUsIm9yaWdfaWF0IjoxNTk0MjEzMTI1fQ.tWsDdREGVc2dPW7ZrcsoastWqfZm0s0w-oy6w0jH7YI
        type: string
    type: object
  dtos.TransactionDto:
    properties:
      amount:
        example: 1504.56
        type: number
      destinationAccountId:
        type: ID
      instrumentId:
        type: ID
    required:
    - amount
    - destinationAccountId
    - instrumentId
    type: object
  handlers.phoneNumberDto:
    properties:
      phoneNumber:
        example: "005491133071114"
        type: string
    required:
    - phoneNumber
    type: object
  models.Account:
    properties:
      createdAt:
        example: "2020-07-07T11:38:09.157803072Z"
        type: string
      dni:
        example: "21399433"
        type: string
      email:
        example: moni.argento@hotmail.com
        type: string
      id:
        type: string
      instruments:
        items:
          $ref: '#/definitions/models.Instrument'
        type: array
      lastName:
        example: Potrelli de Argento
        type: string
      name:
        example: Mónica
        type: string
      phoneNumber:
        example: "005491133071114"
        type: string
      prepaids:
        items:
          $ref: '#/definitions/models.Prepaid'
        type: array
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  models.Instrument:
    properties:
      accountId:
        type: string
      createdAt:
        example: 2020-07-07 13:36:15.738848+02:00
        type: string
      creditType:
        enum:
        - DEBIT
        - ' CREDIT'
        - ' PREPAID'
        example: DEBIT
        type: string
      holder:
        example: José Pepe Argento
        type: string
      id:
        type: string
      issuer:
        example: Banco Itaú
        type: string
      lastFourNumbers:
        example: "4930"
        type: string
      pps:
        enum:
        - VISA
        - ' AMEX'
        - ' MC'
        example: VISA
        type: string
      validThru:
        example: 11/24
        type: string
    type: object
  models.Prepaid:
    properties:
      QUILMES:
        example: "4200"
        type: string
      id:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        example: 1504.56
        type: number
      createdAt:
        example: 2020-07-07 13:36:15.738848+02:00
        type: string
      destinationAccountId:
        example: 19fdsasfads
        type: string
      id:
        type: string
      instrumentId:
        example: asdfafasdfad5
        type: string
      originAccountId:
        example: asdfasdfasdf3
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: ebasualdo@itba.edu.ar
    name: API Support
  description: This is the main server where wallet transactions for the Más Simple Wallet will be received
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Más Simple Wallet-Controller API
  version: "1.0"
paths:
  /auth/login:
    post:
      description: Returns a jwt token to use as authentication
      parameters:
      - description: user's phone number and the received sms code
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.TokenDto'
        "401":
          description: Invalid phone and code combination
      summary: Generate a jwt
  /auth/sms-code:
    post:
      description: Sends an sms to the specified phoneNumber
      parameters:
      - description: user's phone number
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.phoneNumberDto'
      responses:
        "200": {}
        "400":
          description: Invalid phone number
        "500":
          description: Something went wrong
      summary: SMS auth
  /me:
    get:
      description: Returns an account by its id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "401":
          description: Unauthorized
      summary: Get account details
    post:
      description: Replaces all the account information with the information pased
      parameters:
      - description: Fields to edit
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/dtos.AccountDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
      summary: Edit account information
  /me/instruments:
    get:
      description: Returns a list of the available instruments uploaded by the client
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Instrument'
            type: array
        "401":
          description: Unauthorized
      summary: Get available Instruments
    post:
      description: |-
        Inserts and instrument to the list of available user instruments
        Return the instrument object with its id
      parameters:
      - description: ID of the user that requests the instruments
        in: path
        name: id
        required: true
        type: integer
      - description: Instrument to insert
        in: body
        name: instrument
        required: true
        schema:
          $ref: '#/definitions/dtos.InstrumentDto'
      produces:
      - application/json
      responses:
        "200": {}
        "401":
          description: Unauthorized
      summary: Insert instrument
  /me/transactions:
    get:
      description: Returns all time transactions history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "404":
          description: No such user
          schema:
            type: string
      summary: Get transaction history
    post:
      description: Executes as transaction and returns it's full details
      parameters:
      - description: Transaction to execute to insert
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dtos.TransactionDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "400":
          description: The transaction provided is illegal
          schema:
            type: string
      summary: execute transaction
securityDefinitions:
  JWT-Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
